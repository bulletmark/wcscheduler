#!venv/bin/python -u
'Program to schedule control of Watts Clever switches.'
# Mark Blakeney, May 2016.

# Standard packages
import os
import sys
import argparse
import threading
from pathlib import Path

# 3rd party packages
from ruamel.yaml import YAML

# Local packages
import scheduler
import web

# Process command line options
opt = argparse.ArgumentParser(description=__doc__.strip())
opt.add_argument('-c', '--config',
        help='alternative configuration file')
opt.add_argument('-C', '--no-cache', action='store_true',
        help='do not use sunset/rise API cache')
args = opt.parse_args()

# Determine config file path
cfile = Path(args.config) if args.config else \
        Path(os.getenv('XDG_CONFIG_HOME', '~/.config')).expanduser() / \
        (opt.prog + '.conf')

# Read config file
conf = YAML(typ='safe').load(cfile)

num_jobs, num_hooks, num_timers = scheduler.init(opt.prog, args, conf)
print(f'Starting with {num_jobs} jobs, {num_hooks} hooks, '
        f'{num_timers} timers')

# We always run the web server in main thread because better for
# interrupt (e.g. ctrl+c) handling
if num_hooks > 0 and web.init(opt.prog, args, conf):
    if num_jobs > 0:
        t = threading.Thread(target=scheduler.run)
        t.daemon = True
        t.start()

    web.run()
else:
    if num_jobs == 0:
        sys.exit('Terminating because nothing to do ..')

    scheduler.run()
